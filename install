#!/usr/bin/env sh

DOTFILES="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# pre-commit hook
cp $DOTFILES/pre-commit $DOTFILES/.git/hooks/pre-commit


# Git
ln -sf $DOTFILES/git/gitconfig $HOME/.gitconfig
ln -sf $DOTFILES/git/gitignore_global $HOME/.gitignore_global

# Tmux
rm -f $HOME/.tmux.conf
ln -sf $DOTFILES/tmux/tmux.conf $HOME/.tmux.conf

# Vscode
rm $HOME/Library/Application\ Support/Code/User/settings.json
rm $HOME/Library/Application\ Support/Code/User/keybindings.json
ln -sf $DOTFILES/vscode/settings.json $HOME/Library/Application\ Support/Code/User/settings.json
ln -sf $DOTFILES/vscode/keybindings.json $HOME/Library/Application\ Support/Code/User/keybindings.json

# Kitty
# rm -rf $HOME/.config/kitty
# ln -sf $DOTFILES/kitty $HOME/.config/kitty

# Neovim
rm -rf $HOME/.config/nvim
ln -sf $DOTFILES/nvim $HOME/.config/nvim

# Scripts
mkdir -p $HOME/.local/bin

rm -f $HOME/.local/bin/t
ln -sf $DOTFILES/scripts/t $HOME/.local/bin/t

# NVM (Node Version Manager)
mkdir -p $HOME/.nvm
rm -f $HOME/.nvm/default-packages
ln -sf $DOTFILES/nvm/default-packages $HOME/.nvm/default-packages

# Zsh
rm -f $HOME/.zshrc
ln -sf $DOTFILES/zsh/zshrc $HOME/.zshrc
if [ ! -d "$HOME/.oh-my-zsh" ]; then # Auto install if not exists
    KEEP_ZSHRC=yes sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi

# Suppress shell login message (MacOS)
touch ~/.hushlogin
